DROP DATABASE IF EXISTS OPINIONS;
CREATE DATABASE OPINIONS;
USE OPINIONS;

CREATE TABLE USER(
ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
NAME VARCHAR (100) NOT NULL UNIQUE,
EMAIL VARCHAR (100) NOT NULL,
PASSWORD CHAR (32) NOT NULL,
REGISTER_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY(ID)
);

CREATE TABLE TAG(
NAME VARCHAR (20) NOT NULL,
PRIMARY KEY(NAME)
);

CREATE TABLE CATEGORY(
CODE CHAR (3) NOT NULL,
NAME VARCHAR (10) NOT NULL,
PRIMARY KEY(CODE)
);

CREATE TABLE SURVEY (
ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
CONTENT VARCHAR (500) NOT NULL,
USER_ID INT UNSIGNED NOT NULL,
CREATED_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
MUL_OPT VARCHAR(1) NOT NULL,
CATEGORY_CODE CHAR(3) NOT NULL,
PRIMARY KEY(ID),
FOREIGN KEY(USER_ID) REFERENCES USER(ID) ON DELETE CASCADE,
FOREIGN KEY(CATEGORY_CODE) REFERENCES CATEGORY(CODE)
);

CREATE TABLE SURVEY_TAG(
SURVEY_ID INT UNSIGNED NOT NULL,
TAG_NAME VARCHAR(50) NOT NULL,
PRIMARY KEY(SURVEY_ID, TAG_NAME),
FOREIGN KEY(SURVEY_ID) REFERENCES SURVEY(ID) ON DELETE CASCADE,
FOREIGN KEY(TAG_NAME) REFERENCES TAG(NAME) ON DELETE CASCADE
);

CREATE TABLE SURVEY_OPTION(
ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
CONTENT VARCHAR (500) NOT NULL,
SURVEY_ID INT UNSIGNED NOT NULL,
COUNT INT UNSIGNED DEFAULT 0 NOT NULL,
PRIMARY KEY(ID),
FOREIGN KEY(SURVEY_ID) REFERENCES SURVEY(ID) ON DELETE CASCADE
);

CREATE TABLE COMMENT(
ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
CONTENT VARCHAR(500) NOT NULL,
SURVEY_ID INT UNSIGNED NOT NULL,
USER_ID INT UNSIGNED NOT NULL,
CREATED_TIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY(ID),
FOREIGN KEY(SURVEY_ID) REFERENCES SURVEY(ID) ON DELETE CASCADE,
FOREIGN KEY(USER_ID) REFERENCES USER(ID) ON DELETE CASCADE
);




